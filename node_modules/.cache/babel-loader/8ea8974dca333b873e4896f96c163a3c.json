{"ast":null,"code":"import _slicedToArray from \"/Users/reappdev/repos/cs-codefest-team-awesome/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/reappdev/repos/cs-codefest-team-awesome/src/components/register/volunteerForm.js\";\nimport React, { useState } from \"react\";\nexport default function VolunteerForm(props) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        password = _useState6[0],\n        setPassword = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        phone = _useState8[0],\n        setPhone = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        skills = _useState10[0],\n        setSkills = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        newSkill = _useState12[0],\n        setNewSkill = _useState12[1];\n\n  const onAfterCreateVolunteer = props.onAfterCreateVolunteer;\n\n  const inputHandler = e => {\n    switch (e.target.id) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n\n      case \"email\":\n        setEmail(e.target.value);\n        break;\n\n      case \"phone\":\n        setPhone(e.target.value);\n        break;\n\n      case \"password\":\n        setPassword(e.target.value);\n        break;\n\n      case \"newSkill\":\n        setNewSkill(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const skillsHandler = e => {\n    const skillsCopy = [...skills];\n    skillsCopy.push(newSkill);\n    setSkills(skillsCopy);\n    setNewSkill(\"\");\n  };\n\n  const createVolunteerHandler = e => {\n    e.preventDefault();\n    fetch(\"\".concat(process.env.REACT_APP_BACKEND_URI, \"/endpoint\"), {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        Authorization: \"Token \".concat(\"token\")\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        phone,\n        password,\n        skills\n      })\n    }).then(res => res.json()).then(data => {//If you need the response...\n    }).catch(function (error) {\n      console.log(\"Request failed\", error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Register Volunteer\"), React.createElement(\"form\", {\n    onSubmit: createVolunteerHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name\",\n    \"aria-describedby\": \"nameDescription\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"email\",\n    \"aria-describedby\": \"emailDescription\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"phone\",\n    \"aria-describedby\": \"phoneDescription\",\n    placeholder: \"Enter phone\",\n    value: phone,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"password\",\n    \"aria-describedby\": \"passwordDescription\",\n    placeholder: \"Enter password\",\n    value: password,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"newSkill\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Your Skills\"), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    onClick: skillsHandler,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Add Skill\")), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"newSkill\",\n    \"aria-describedby\": \"skillsDescription\",\n    placeholder: \"Enter a skill needed\",\n    value: newSkill,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(\"small\", {\n    id: \"skillsDescription\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"What skills can you provide?\"), React.createElement(\"div\", {\n    className: \"skills-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, skills.map((v, i) => React.createElement(\"div\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, v)))), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/Users/reappdev/repos/cs-codefest-team-awesome/src/components/register/volunteerForm.js"],"names":["React","useState","VolunteerForm","props","name","setName","email","setEmail","password","setPassword","phone","setPhone","skills","setSkills","newSkill","setNewSkill","onAfterCreateVolunteer","inputHandler","e","target","id","value","skillsHandler","skillsCopy","push","createVolunteerHandler","preventDefault","fetch","process","env","REACT_APP_BACKEND_URI","method","headers","Authorization","body","JSON","stringify","then","res","json","data","catch","error","console","log","map","v","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function VolunteerForm(props) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [newSkill, setNewSkill] = useState(\"\");\n\n  const { onAfterCreateVolunteer } = props;\n\n  const inputHandler = e => {\n    switch (e.target.id) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"email\":\n        setEmail(e.target.value);\n        break;\n      case \"phone\":\n        setPhone(e.target.value);\n        break;\n      case \"password\":\n        setPassword(e.target.value);\n        break;\n      case \"newSkill\":\n        setNewSkill(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const skillsHandler = e => {\n    const skillsCopy = [...skills];\n    skillsCopy.push(newSkill);\n    setSkills(skillsCopy);\n    setNewSkill(\"\");\n  };\n\n  const createVolunteerHandler = e => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_BACKEND_URI}/endpoint`, {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        Authorization: `Token ${\"token\"}`\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        phone,\n        password,\n        skills\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        //If you need the response...\n      })\n      .catch(function(error) {\n        console.log(\"Request failed\", error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Register Volunteer</h1>\n      <form onSubmit={createVolunteerHandler}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            aria-describedby=\"nameDescription\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={inputHandler}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailDescription\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={inputHandler}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"phone\">Phone</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phone\"\n            aria-describedby=\"phoneDescription\"\n            placeholder=\"Enter phone\"\n            value={phone}\n            onChange={inputHandler}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"password\"\n            aria-describedby=\"passwordDescription\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={inputHandler}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"newSkill\">Your Skills</label>\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                onClick={skillsHandler}\n                type=\"button\"\n              >\n                Add Skill\n              </button>\n            </div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"newSkill\"\n              aria-describedby=\"skillsDescription\"\n              placeholder=\"Enter a skill needed\"\n              value={newSkill}\n              onChange={inputHandler}\n            />\n          </div>\n          <small id=\"skillsDescription\" className=\"form-text text-muted\">\n            What skills can you provide?\n          </small>\n          <div className=\"skills-container\">\n            {skills.map((v, i) => (\n              <div key={i}>{v}</div>\n            ))}\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}