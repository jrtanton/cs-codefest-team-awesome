{"ast":null,"code":"import _slicedToArray from \"/home/thor-jr/Documents/cs-codefest-team-awesome/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/thor-jr/Documents/cs-codefest-team-awesome/src/components/register/volunteerForm.js\";\nimport React, { useState } from 'react';\nexport default function VolunteerForm() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        password = _useState6[0],\n        setPassword = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        phone = _useState8[0],\n        setPhone = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        skills = _useState10[0],\n        setSkills = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        newSkill = _useState12[0],\n        setNewSkill = _useState12[1];\n\n  const inputHandler = e => {\n    switch (e.target.id) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n\n      case \"email\":\n        setEmail(e.target.value);\n        break;\n\n      case \"phone\":\n        setPhone(e.target.value);\n        break;\n\n      case \"password\":\n        setPassword(e.target.value);\n        break;\n\n      case \"newSkill\":\n        setNewSkill(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const skillsHandler = e => {\n    const skillsCopy = [...skills];\n    skillsCopy.push(newSkill);\n    setSkills(skillsCopy);\n    setNewSkill(\"\");\n  };\n\n  const createVolunteerHandler = e => {\n    e.preventDefault();\n    fetch(\"\".concat(process.env.REACT_APP_BACKEND_URI, \"/endpoint\"), {\n      method: 'post',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        'Authorization': \"Token \".concat('token')\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        phone,\n        password,\n        skills\n      })\n    }).then(res => res.json()).then(data => {//If you need the response...\n    }).catch(function (error) {\n      console.log('Request failed', error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Register Volunteer\"), React.createElement(\"form\", {\n    onSubmit: createVolunteerHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name\",\n    \"aria-describedby\": \"nameDescription\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"email\",\n    \"aria-describedby\": \"emailDescription\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"phone\",\n    \"aria-describedby\": \"phoneDescription\",\n    placeholder: \"Enter phone\",\n    value: phone,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"password\",\n    \"aria-describedby\": \"passwordDescription\",\n    placeholder: \"Enter password\",\n    value: password,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"newSkill\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Your Skills\"), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    onClick: skillsHandler,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Add Skill\")), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"newSkill\",\n    \"aria-describedby\": \"skillsDescription\",\n    placeholder: \"Enter a skill needed\",\n    value: newSkill,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"small\", {\n    id: \"skillsDescription\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"What skills can you provide?\"), React.createElement(\"div\", {\n    className: \"skills-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, skills.map((v, i) => React.createElement(\"div\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, v)))), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/home/thor-jr/Documents/cs-codefest-team-awesome/src/components/register/volunteerForm.js"],"names":["React","useState","VolunteerForm","name","setName","email","setEmail","password","setPassword","phone","setPhone","skills","setSkills","newSkill","setNewSkill","inputHandler","e","target","id","value","skillsHandler","skillsCopy","push","createVolunteerHandler","preventDefault","fetch","process","env","REACT_APP_BACKEND_URI","method","headers","body","JSON","stringify","then","res","json","data","catch","error","console","log","map","v","i"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nexport default function VolunteerForm() {\n    const [name,setName] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n    const [phone,setPhone] = useState(\"\");\n    const [skills,setSkills] = useState([]);\n    const [newSkill,setNewSkill] = useState(\"\");\n\n    const inputHandler = (e) => {\n        switch(e.target.id) {\n            case \"name\":\n                setName(e.target.value)\n                break;\n            case \"email\":\n                setEmail(e.target.value)\n                break;\n            case \"phone\":\n                setPhone(e.target.value)\n                break;\n            case \"password\":\n                setPassword(e.target.value)\n                break;\n            case \"newSkill\":\n                setNewSkill(e.target.value)\n                break;\n            default:\n                break;\n        }\n    }\n\n    const skillsHandler  = (e) => {\n        const skillsCopy = [...skills]\n        skillsCopy.push(newSkill)\n        setSkills(skillsCopy)\n        setNewSkill(\"\")\n    }\n\n    const createVolunteerHandler = (e) => {\n        e.preventDefault()\n        fetch(`${process.env.REACT_APP_BACKEND_URI}/endpoint`, {\n            method: 'post',\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n              'Authorization': `Token ${'token'}`\n            },\n            body: JSON.stringify({\n                name,\n                email,\n                phone,\n                password,\n                skills\n            })\n        })\n        .then( res => res.json() )\n        .then((data) => {\n            //If you need the response...\n        })\n        .catch(function (error) {\n            console.log('Request failed', error);\n        });\n    }\n\n    return (\n        <div>\n            <h1>Register Volunteer</h1>\n            <form onSubmit={createVolunteerHandler}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"name\" aria-describedby=\"nameDescription\" placeholder=\"Enter name\" value={name} onChange={inputHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"text\" className=\"form-control\" id=\"email\" aria-describedby=\"emailDescription\" placeholder=\"Enter email\" value={email} onChange={inputHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input type=\"text\" className=\"form-control\" id=\"phone\" aria-describedby=\"phoneDescription\" placeholder=\"Enter phone\" value={phone} onChange={inputHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"text\" className=\"form-control\" id=\"password\" aria-describedby=\"passwordDescription\" placeholder=\"Enter password\" value={password} onChange={inputHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"newSkill\">Your Skills</label>\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <button className=\"btn btn-outline-secondary\" onClick={skillsHandler} type=\"button\">Add Skill</button>\n                        </div>\n                        <input type=\"text\" className=\"form-control\" id=\"newSkill\" aria-describedby=\"skillsDescription\" placeholder=\"Enter a skill needed\" value={newSkill} onChange={inputHandler} />\n                    </div>\n                    <small id=\"skillsDescription\" className=\"form-text text-muted\">What skills can you provide?</small>\n                    <div className=\"skills-container\">\n                        {skills.map((v,i) => <div key={i}>{v}</div>)}\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>           \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}