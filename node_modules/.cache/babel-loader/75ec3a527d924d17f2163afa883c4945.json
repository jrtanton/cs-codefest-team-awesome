{"ast":null,"code":"import _slicedToArray from \"/home/thor-jr/Documents/cs-codefest-team-awesome/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/thor-jr/Documents/cs-codefest-team-awesome/src/components/register/volunteerForm.js\";\nimport React, { useState } from 'react';\nexport default function VolunteerForm() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        description = _useState4[0],\n        setDescription = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        location = _useState6[0],\n        setLocation = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        skills = _useState8[0],\n        setSkills = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        newSkill = _useState10[0],\n        setNewSkill = _useState10[1];\n\n  const _useState11 = useState(new Date()),\n        _useState12 = _slicedToArray(_useState11, 2),\n        time = _useState12[0],\n        setTime = _useState12[1];\n  /*\n      Volunteer Name*:\n      Description*:\n      Email*:\n      Phone:\n      Skills:\n      Username*:\n      Password*:\n       {\n          id: 1,\n          name: \"Jarrod\",\n          email: \"jarrod.tanton@gmail.com\",\n          phone: \"1234561234\",\n          skills: [],\n          eventHistory: []\n      }\n  */\n\n\n  const inputHandler = e => {\n    switch (e.target.id) {\n      case \"title\":\n        setTitle(e.target.value);\n        break;\n\n      case \"description\":\n        setDescription(e.target.value);\n        break;\n\n      case \"location\":\n        setLocation(e.target.value);\n        break;\n\n      case \"newSkill\":\n        setNewSkill(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const skillsHandler = e => {\n    const skillsCopy = [...skills];\n    skillsCopy.push(newSkill);\n    setSkills(skillsCopy);\n    setNewSkill(\"\");\n  };\n\n  const createEventHandler = e => {\n    e.preventDefault();\n    fetch(\"\".concat(process.env.REACT_APP_BACKEND_URI, \"/endpoint\"), {\n      method: 'post',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        'Authorization': \"Token \".concat('token')\n      },\n      body: JSON.stringify({\n        \"title\": title,\n        \"description\": description,\n        \"location\": location,\n        \"skills\": skills,\n        \"time\": time.toISOString()\n      })\n    }).then(res => res.json()).then(data => {//If you need the response...\n    }).catch(function (error) {\n      console.log('Request failed', error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Register Volunteer\"), React.createElement(\"form\", {\n    onSubmit: createEventHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"title\",\n    \"aria-describedby\": \"titleDescription\",\n    placeholder: \"Enter title\",\n    value: title,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description\",\n    \"aria-describedby\": \"descriptionDescription\",\n    placeholder: \"Enter description\",\n    value: description,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Location\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"location\",\n    \"aria-describedby\": \"locationDescription\",\n    placeholder: \"Enter location\",\n    value: location,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"newSkill\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Skills Needed\"), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    onClick: skillsHandler,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Add Skill\")), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"newSkill\",\n    \"aria-describedby\": \"skillsDescription\",\n    placeholder: \"Enter a skill needed\",\n    value: newSkill,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"small\", {\n    id: \"skillsDescription\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"What skills do you need for your event?\"), React.createElement(\"div\", {\n    className: \"skills-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, skills.map((v, i) => React.createElement(\"div\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, v)))), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/home/thor-jr/Documents/cs-codefest-team-awesome/src/components/register/volunteerForm.js"],"names":["React","useState","VolunteerForm","title","setTitle","description","setDescription","location","setLocation","skills","setSkills","newSkill","setNewSkill","Date","time","setTime","inputHandler","e","target","id","value","skillsHandler","skillsCopy","push","createEventHandler","preventDefault","fetch","process","env","REACT_APP_BACKEND_URI","method","headers","body","JSON","stringify","toISOString","then","res","json","data","catch","error","console","log","map","v","i"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nexport default function VolunteerForm() {\n    const [title,setTitle] = useState(\"\");\n    const [description,setDescription] = useState(\"\");\n    const [location,setLocation] = useState(\"\");\n    const [skills,setSkills] = useState([]);\n    const [newSkill,setNewSkill] = useState(\"\");\n    const [time,setTime] = useState(new Date());\n\n    /*\n        Volunteer Name*:\n        Description*:\n        Email*:\n        Phone:\n        Skills:\n        Username*:\n        Password*:\n\n        {\n            id: 1,\n            name: \"Jarrod\",\n            email: \"jarrod.tanton@gmail.com\",\n            phone: \"1234561234\",\n            skills: [],\n            eventHistory: []\n        }\n    */\n\n    const inputHandler = (e) => {\n        switch(e.target.id) {\n            case \"title\":\n                setTitle(e.target.value)\n                break;\n            case \"description\":\n                setDescription(e.target.value)\n                break;\n            case \"location\":\n                setLocation(e.target.value)\n                break;\n            case \"newSkill\":\n                setNewSkill(e.target.value)\n                break;\n            default:\n                break;\n        }\n    }\n\n    const skillsHandler  = (e) => {\n        const skillsCopy = [...skills]\n        skillsCopy.push(newSkill)\n        setSkills(skillsCopy)\n        setNewSkill(\"\")\n    }\n\n    const createEventHandler = (e) => {\n        e.preventDefault()\n        fetch(`${process.env.REACT_APP_BACKEND_URI}/endpoint`, {\n            method: 'post',\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n              'Authorization': `Token ${'token'}`\n            },\n            body: JSON.stringify({\n                \"title\": title,\n                \"description\": description,\n                \"location\": location,\n                \"skills\": skills,\n                \"time\": time.toISOString()\n            })\n        })\n        .then( res => res.json() )\n        .then((data) => {\n            //If you need the response...\n        })\n        .catch(function (error) {\n            console.log('Request failed', error);\n        });\n    }\n\n    return (\n        <div>\n            <h1>Register Volunteer</h1>\n            <form onSubmit={createEventHandler}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" className=\"form-control\" id=\"title\" aria-describedby=\"titleDescription\" placeholder=\"Enter title\" value={title} onChange={inputHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description</label>\n                    <input type=\"text\" className=\"form-control\" id=\"description\" aria-describedby=\"descriptionDescription\" placeholder=\"Enter description\" value={description} onChange={inputHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"location\">Location</label>\n                    <input type=\"text\" className=\"form-control\" id=\"location\" aria-describedby=\"locationDescription\" placeholder=\"Enter location\" value={location} onChange={inputHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"newSkill\">Skills Needed</label>\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <button className=\"btn btn-outline-secondary\" onClick={skillsHandler} type=\"button\">Add Skill</button>\n                        </div>\n                        <input type=\"text\" className=\"form-control\" id=\"newSkill\" aria-describedby=\"skillsDescription\" placeholder=\"Enter a skill needed\" value={newSkill} onChange={inputHandler} />\n                    </div>\n                    <small id=\"skillsDescription\" className=\"form-text text-muted\">What skills do you need for your event?</small>\n                    <div className=\"skills-container\">\n                        {skills.map((v,i) => <div key={i}>{v}</div>)}\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>           \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}