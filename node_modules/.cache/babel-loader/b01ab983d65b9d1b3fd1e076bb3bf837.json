{"ast":null,"code":"var _jsxFileName = \"/Users/reappdev/repos/cs-codefest-team-awesome/src/components/events/events.jsx\";\nimport React from \"react\";\nimport EventCard from \"../event-card/event-card\";\nimport { getEvents } from \"../../services/event-service\";\n\nconst Events = props => {\n  const events = getEvents();\n\n  const handleAttendEvent = e => {\n    console.log(e.currentTarget.id);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), events.map(e => React.createElement(EventCard, {\n    key: e.id,\n    event: e,\n    attendEventHandler: handleAttendEvent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })));\n};\n\nexport default Events;","map":{"version":3,"sources":["/Users/reappdev/repos/cs-codefest-team-awesome/src/components/events/events.jsx"],"names":["React","EventCard","getEvents","Events","props","events","handleAttendEvent","e","console","log","currentTarget","id","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,SAAT,QAA0B,8BAA1B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;;AAEA,QAAMI,iBAAiB,GAAGC,CAAC,IAAI;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,aAAF,CAAgBC,EAA5B;AACD,GAFD;;AAIA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGN,MAAM,CAACO,GAAP,CAAWL,CAAC,IACX,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,CAAC,CAACI,EADT;AAEE,IAAA,KAAK,EAAEJ,CAFT;AAGE,IAAA,kBAAkB,EAAED,iBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF;AAYD,CAnBD;;AAqBA,eAAeH,MAAf","sourcesContent":["import React from \"react\";\nimport EventCard from \"../event-card/event-card\";\nimport { getEvents } from \"../../services/event-service\";\n\nconst Events = props => {\n  const events = getEvents();\n\n  const handleAttendEvent = e => {\n    console.log(e.currentTarget.id);\n  };\n\n  return (\n    <React.Fragment>\n      <Filter />\n      {events.map(e => (\n        <EventCard\n          key={e.id}\n          event={e}\n          attendEventHandler={handleAttendEvent}\n        />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default Events;\n"]},"metadata":{},"sourceType":"module"}