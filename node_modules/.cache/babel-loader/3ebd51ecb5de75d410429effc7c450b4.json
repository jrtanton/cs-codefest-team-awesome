{"ast":null,"code":"import _slicedToArray from \"/home/thor-jr/Documents/cs-codefest-team-awesome/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/thor-jr/Documents/cs-codefest-team-awesome/src/components/createEvents/createEvents.js\";\nimport React, { useState } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { parseSync } from '@babel/core';\nexport default function CreateEvents() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        description = _useState4[0],\n        setDescription = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        location = _useState6[0],\n        setLocation = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        skills = _useState8[0],\n        setSkills = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        newSkill = _useState10[0],\n        setNewSkill = _useState10[1];\n\n  const _useState11 = useState(new Date()),\n        _useState12 = _slicedToArray(_useState11, 2),\n        time = _useState12[0],\n        setTime = _useState12[1];\n\n  const inputHandler = e => {\n    console.log(e.value);\n\n    switch (e.target.id) {\n      case \"title\":\n        setTitle(e.value);\n        break;\n\n      case \"description\":\n        setDescription(e.value);\n        break;\n\n      case \"location\":\n        setLocation(e.value);\n        break;\n\n      case \"newSkill\":\n        setNewSkill(e.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const skillsHandler = e => {\n    const skillsCopy = [...skills];\n    skillsCopy.push(newSkill);\n    setSkills(skillsCopy);\n    setNewSkill(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Create Event\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"title\",\n    \"aria-describedby\": \"titleDescription\",\n    placeholder: \"Enter title\",\n    value: title,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description\",\n    \"aria-describedby\": \"descriptionDescription\",\n    placeholder: \"Enter description\",\n    value: description,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Location\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"location\",\n    \"aria-describedby\": \"locationDescription\",\n    placeholder: \"Enter location\",\n    value: location,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Skills Needed\"), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    onClick: skillsHandler,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Add Skill\")), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"skills\",\n    \"aria-describedby\": \"skillsDescription\",\n    placeholder: \"Enter a skill needed\",\n    value: newSkill,\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"small\", {\n    id: \"skillsDescription\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"What skills do you need for your event?\"), skills.map((v, i) => React.createElement(\"span\", {\n    key: i,\n    className: \"badge badge-pill badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, v))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Date Of Event\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(DatePicker, {\n    id: \"date\",\n    className: \"form-control\",\n    selected: time,\n    onChange: setTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/home/thor-jr/Documents/cs-codefest-team-awesome/src/components/createEvents/createEvents.js"],"names":["React","useState","DatePicker","parseSync","CreateEvents","title","setTitle","description","setDescription","location","setLocation","skills","setSkills","newSkill","setNewSkill","Date","time","setTime","inputHandler","e","console","log","value","target","id","skillsHandler","skillsCopy","push","map","v","i"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport DatePicker from \"react-datepicker\"; \nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { parseSync } from '@babel/core';\n\nexport default function CreateEvents() {\n    const [title,setTitle] = useState(\"\");\n    const [description,setDescription] = useState(\"\");\n    const [location,setLocation] = useState(\"\");\n    const [skills,setSkills] = useState([]);\n    const [newSkill,setNewSkill] = useState(\"\");\n    const [time,setTime] = useState(new Date());\n\n    const inputHandler = (e) => {\n        console.log(e.value)\n        switch(e.target.id) {\n            case \"title\":\n                setTitle(e.value)\n                break;\n            case \"description\":\n                setDescription(e.value)\n                break;\n            case \"location\":\n                setLocation(e.value)\n                break;\n            case \"newSkill\":\n                setNewSkill(e.value)\n                break;\n            default:\n                break;\n        }\n    }\n\n    const skillsHandler  = (e) => {\n        const skillsCopy = [...skills]\n        skillsCopy.push(newSkill)\n        setSkills(skillsCopy)\n        setNewSkill(\"\")\n    }\n\n    return (\n        <div>\n            <h1>Create Event</h1>\n            <form>\n                <div className=\"form-group\">\n                    <label for=\"title\">Title</label>\n                    <input type=\"text\" className=\"form-control\" id=\"title\" aria-describedby=\"titleDescription\" placeholder=\"Enter title\" value={title} onChange={inputHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"description\">Description</label>\n                    <input type=\"text\" className=\"form-control\" id=\"description\" aria-describedby=\"descriptionDescription\" placeholder=\"Enter description\" value={description} onChange={inputHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"location\">Location</label>\n                    <input type=\"text\" className=\"form-control\" id=\"location\" aria-describedby=\"locationDescription\" placeholder=\"Enter location\" value={location} onChange={inputHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"skills\">Skills Needed</label>\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <button className=\"btn btn-outline-secondary\" onClick={skillsHandler} type=\"button\">Add Skill</button>\n                        </div>\n                        <input type=\"text\" className=\"form-control\" id=\"skills\" aria-describedby=\"skillsDescription\" placeholder=\"Enter a skill needed\" value={newSkill} onChange={inputHandler} />\n                    </div>\n                    <small id=\"skillsDescription\" className=\"form-text text-muted\">What skills do you need for your event?</small>\n                    {skills.map((v,i) => <span key={i} className=\"badge badge-pill badge-primary\">{v}</span>)}\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"date\">Date Of Event</label><br/>\n                    <DatePicker\n                        id=\"date\"\n                        className=\"form-control\"\n                        selected={time}\n                        onChange={setTime}\n                    />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>           \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}