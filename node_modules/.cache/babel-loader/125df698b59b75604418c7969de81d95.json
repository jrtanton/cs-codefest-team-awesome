{"ast":null,"code":"import _slicedToArray from \"/Users/reappdev/repos/cs-codefest-team-awesome/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/reappdev/repos/cs-codefest-team-awesome/src/components/events/events.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport EventCard from \"../event-card/event-card\";\nimport Filter from \"../filter/filter\";\nimport { getEvents, seedEvents } from \"../../services/event-service\";\nimport \"./events.css\";\n\nconst Events = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        allEvents = _useState4[0],\n        setAllEvents = _useState4[1];\n\n  const _useState5 = useState({\n    startDate: new Date(),\n    endDate: new Date()\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        dateRange = _useState6[0],\n        setDateRange = _useState6[1];\n\n  const _useState7 = useState([{\n    id: 8,\n    name: \"Coding\"\n  }, {\n    id: 9,\n    name: \"Developers\"\n  }, {\n    id: 10,\n    name: \"Heavy Lifting\"\n  }, {\n    id: 11,\n    name: \"any\"\n  }, {\n    id: 12,\n    name: \"Coaching\"\n  }, {\n    id: 13,\n    name: \"Critter Wrangling\"\n  }, {\n    id: 14,\n    name: \"Tutoring\"\n  }, {\n    id: 15,\n    name: \"Tutoring math\"\n  }, {\n    id: 16,\n    name: \"Power Tools\"\n  }, {\n    id: 17,\n    name: \"Dog Walking\"\n  }, {\n    id: 19,\n    name: \"Cooking\"\n  }]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        skills = _useState8[0],\n        setSkills = _useState8[1];\n\n  useEffect(() => {\n    const selectedSkills = skills.filter(s => s.active).map(s => s.name).join(\"-\");\n\n    if (!selectedSkills) {\n      setEvents(allEvents);\n      return;\n    }\n\n    const matchingEvents = allEvents.filter(e => e.skills.filter(s => selectedSkills.includes(s.name)).length > 0);\n    setEvents(matchingEvents);\n  }, [skills]);\n  useEffect(() => {\n    const events = getEvents();\n    setEvents(events);\n    setAllEvents(events);\n  }, []);\n\n  const handleAttendEvent = e => {\n    console.log(e.currentTarget.id);\n  };\n\n  const handleSeedEvents = e => {\n    seedEvents();\n  };\n\n  const handleFilterEvent = e => {\n    const name = e.currentTarget.id;\n    const skillsCopy = [...skills];\n    const index = skillsCopy.findIndex(s => s.name === name);\n    skillsCopy[index].active = !skillsCopy[index].active;\n    setSkills(skillsCopy);\n  };\n\n  const handleChangeDate = ({\n    startDate,\n    endDate\n  }) => {\n    startDate = startDate || dateRange.startDate;\n    endDate = endDate || dateRange.endDate;\n    setDateRange({\n      startDate: startDate,\n      endDate: endDate\n    });\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    filterEventHandler: handleFilterEvent,\n    changeDateHandler: handleChangeDate,\n    dateRange: dateRange,\n    skills: skills,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"event-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, events && Object.keys(events).map(k => React.createElement(EventCard, {\n    key: k,\n    event: events[k],\n    attendEventHandler: handleAttendEvent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: handleSeedEvents,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Seed Events Table\"));\n};\n\nexport default Events;","map":{"version":3,"sources":["/Users/reappdev/repos/cs-codefest-team-awesome/src/components/events/events.jsx"],"names":["React","useState","useEffect","EventCard","Filter","getEvents","seedEvents","Events","props","events","setEvents","allEvents","setAllEvents","startDate","Date","endDate","dateRange","setDateRange","id","name","skills","setSkills","selectedSkills","filter","s","active","map","join","matchingEvents","e","includes","length","handleAttendEvent","console","log","currentTarget","handleSeedEvents","handleFilterEvent","skillsCopy","index","findIndex","handleChangeDate","Object","keys","k"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport EventCard from \"../event-card/event-card\";\nimport Filter from \"../filter/filter\";\nimport { getEvents, seedEvents } from \"../../services/event-service\";\nimport \"./events.css\";\n\nconst Events = props => {\n  const [events, setEvents] = useState([]);\n  const [allEvents, setAllEvents] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    startDate: new Date(),\n    endDate: new Date()\n  });\n  const [skills, setSkills] = useState([\n    { id: 8, name: \"Coding\" },\n    { id: 9, name: \"Developers\" },\n    { id: 10, name: \"Heavy Lifting\" },\n    { id: 11, name: \"any\" },\n    { id: 12, name: \"Coaching\" },\n    { id: 13, name: \"Critter Wrangling\" },\n    { id: 14, name: \"Tutoring\" },\n    { id: 15, name: \"Tutoring math\" },\n    { id: 16, name: \"Power Tools\" },\n    { id: 17, name: \"Dog Walking\" },\n    { id: 19, name: \"Cooking\" }\n  ]);\n\n  useEffect(() => {\n    const selectedSkills = skills\n      .filter(s => s.active)\n      .map(s => s.name)\n      .join(\"-\");\n\n    if (!selectedSkills) {\n      setEvents(allEvents);\n      return;\n    }\n\n    const matchingEvents = allEvents.filter(\n      e => e.skills.filter(s => selectedSkills.includes(s.name)).length > 0\n    );\n\n    setEvents(matchingEvents);\n  }, [skills]);\n\n  useEffect(() => {\n    const events = getEvents();\n    setEvents(events);\n    setAllEvents(events);\n  }, []);\n\n  const handleAttendEvent = e => {\n    console.log(e.currentTarget.id);\n  };\n\n  const handleSeedEvents = e => {\n    seedEvents();\n  };\n\n  const handleFilterEvent = e => {\n    const name = e.currentTarget.id;\n    const skillsCopy = [...skills];\n    const index = skillsCopy.findIndex(s => s.name === name);\n    skillsCopy[index].active = !skillsCopy[index].active;\n    setSkills(skillsCopy);\n  };\n\n  const handleChangeDate = ({ startDate, endDate }) => {\n    startDate = startDate || dateRange.startDate;\n    endDate = endDate || dateRange.endDate;\n    setDateRange({ startDate: startDate, endDate: endDate });\n  };\n\n  return (\n    <React.Fragment>\n      <Filter\n        filterEventHandler={handleFilterEvent}\n        changeDateHandler={handleChangeDate}\n        dateRange={dateRange}\n        skills={skills}\n      />\n      <div className=\"event-container\">\n        {events &&\n          Object.keys(events).map(k => (\n            <EventCard\n              key={k}\n              event={events[k]}\n              attendEventHandler={handleAttendEvent}\n            />\n          ))}\n      </div>\n      <button onClick={handleSeedEvents}>Seed Events Table</button>\n    </React.Fragment>\n  );\n};\n\nexport default Events;\n"]},"metadata":{},"sourceType":"module"}